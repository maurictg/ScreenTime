@model LIST.Models.Student
@{
    Layout = "~/Areas/Decaan/Views/Shared/_Decaan.cshtml";
    ViewData["Title"] = "Decaan - Leerlingen";
    if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <script>M.toast({ html: '@LIST.Classes.Layout.MessageColor(ViewBag.Message)[0]', classes: '@LIST.Classes.Layout.MessageColor(ViewBag.Message)[1]' });</script>
    }
    string randomtoken = LIST.Classes.Encryption.HASH.hashPBKDF2(LIST.Classes.Encryption.SPECIAL.RandomString(15));
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
    <h3>Leerling aanpassen</h3>


    @using (Html.BeginForm("Save", "Decaan/Leerling", FormMethod.Post, new { @id = "postform" }))
    {
        @Html.HiddenFor(m => Model.Id)
        <div class="row">
            <div class="row">
                <div class="input-field col s5">
                    <i class="material-icons prefix">account_circle</i>
                    @Html.TextBoxFor(m => Model.Name, new { @class = "validate", @id = "voornaam" })
                    <label for="voornaam">Voornaam</label>
                </div>
                <div class="input-field col s2">
                    @Html.TextBoxFor(m => Model.Prefix, new { @class = "validate", @id = "prefix" })
                </div>
                <div class="input-field col s5">
                    @Html.TextBoxFor(m => Model.Lastname, new { @class = "validate", @id = "achternaam" })
                    <label for="achternaam">Achternaam</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s6">
                    <i class="material-icons prefix">phone</i>
                    @Html.TextBoxFor(m => Model.Phone, new { @class = "validate", @id = "telefoon" })
                    <label for="telefoon">Telefoonnummer</label>
                </div>
                <div class="input-field col s6">
                    <i class="material-icons prefix">email</i>
                    @Html.TextBoxFor(m => Model.Email, new { @class = "validate", @id = "email" })
                    <label for="email">Mailadres</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s4">
                    @Html.TextBoxFor(m => Model.Studentcode, new { @class = "validate", @id = "leerlingnr" })
                    <label for="leerlingnr">Leerlingnummer</label>
                </div>
                <div class="input-field col s8">
                    <i class="material-icons prefix">home</i>
                    @Html.TextBoxFor(m => Model.Adress, new { @class = "validate", @id = "adres" })
                    <label for="adres">Adres</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s4">
                    @Html.TextBoxFor(m => Model.Postcode, new { @class = "validate", @id = "pc" })
                    <label for="pc">Postcode</label>
                </div>
                <div class="input-field col s8">
                    <i class="material-icons prefix">home</i>
                    @Html.TextBoxFor(m => Model.Residence, new { @class = "validate", @id = "wp" })
                    <label for="wp">Woonplaats</label>
                </div>
            </div>
            <div class="row">
                <div class="col s6">
                    @Html.TextBoxFor(m => Model.Birthdate, new { @class = "datepicker", @id = "date" })
                </div>
            </div>
        </div>
        <div class="row">
            &nbsp; <a onclick="document.getElementById('postform').submit()" class="waves-effect waves-light btn blue">Opslaan</a>
            &nbsp; <a href="#addnew" class="waves-effect waves-light btn modal-trigger green">Nieuw toevoegen</a>
            &nbsp; <a href="#delusr" class="waves-effect waves-light btn modal-trigger red">Gebruiker verwijderen</a>

        </div>

        <!-- Modal Structure -->
        <div id="addnew" class="modal">
            <div class="modal-content">
                <h4>Voer de token in van de gebruiker waaraan u deze data wilt toevoegen</h4>
                <div class="input-field col s6">
                    <i class="material-icons prefix">lock</i>
                    <input type="text" id="token" />
                    <label for="token">Gekoppelde Token</label>
                </div>
            </div>
            <div class="modal-footer">
                <a class="modal-close waves-effect btn green" onclick="newuser()">Gebruiker toevoegen</a>
            </div>
        </div>



        <!-- Modal Structure -->
        <div id="delusr" class="modal">
            <div class="modal-content">
                <h4>Wilt u deze gebruiker verwijderen?</h4>
                <p>Zeker weten?</p>
            </div>
            <div class="modal-footer">
                <a class="modal-close waves-effect waves-green btn-flat">Nee</a>
                <a onclick="deluser()" class="modal-close waves-effect waves-red btn-flat">Ja, verwijder</a>
            </div>
        </div>
    }

    <script type="text/javascript">
        $('#token').val('@randomtoken');

        function newuser() {
            var form = document.getElementById("postform");
            form.method = "POST";
            form.action = "/Decaan/Leerling/Add";

            var elem1 = document.createElement("input");
            elem1.value = $('#token').val();
            elem1.name = "Token";

            form.appendChild(elem1);
            form.submit();
        }

        function deluser() {
            var form = document.getElementById("postform");
            form.method = "POST";
            form.action = "/Decaan/Leerling/Delete";
            form.submit();
        }

    </script>

</body>
</html>


